


**********  MESSAGE STRUCTURE  **************

General Structure:   
   Message {
      protocol    -> string: Gives general idea about type of message and what protocol this message should use. Three types:
                        - "OUCH" Message sent to enter buy/sell offer or change market in some way.
                        - "ITCH" Message sent to inform about market state.
                        - "USER" Message generated by user interacting with UI.
      timestamp   -> int: time at which message was created.
      msgType     -> string: indicates what type of message this is. Example: "ESELL" = enter sell message
      msgData     -> array: Various information included with message, content varies by message type.
   }


Specific Message Structures:
   
   OUCH Messages:
      Enter Buy Order:
         protocol    -> "OUCH"
         msgType     -> "EBUY"
         msgData     -> [buyer-id, price]

      Enter Sell Order:
         protocol    -> "OUCH"
         msgType     -> "ESELL"
         msgData     -> [seller-id, price]

      Remove Buy Order:
         protocol    -> "OUTCH"
         msgType     -> "RBUY"
         msgData     -> [buyer-id]

      Remove Sell Order:
         protocol    -> "OUTCH"
         msgType     -> "RSELL"
         msgData     -> [seller-id]


   
   ITCH Messages:      
      Fundemental Price Change:
         protocol    -> "ITCH"
         msgType     -> "FPC"
         msgData     -> [change-time, new-price]

      Confirm that Buy Order was Entered:
         protocol    -> "ITCH"
         msgType     -> "C_EBUY"
         msgData     -> [buyer-id, price, time-order-entered]

      Confirm that Sell Order was Entered:
         protocol    -> "ITCH"
         msgType     -> "C_ESELL"
         msgData     -> [seller-id, price, time-order-entered]

      Confirm that Buy Order was Removed:
         protocol    -> "ITCH"
         msgType     -> "C_RBUY"
         msgData     -> [buyer-id, time-order-entered]

      Confirm that Sell Order was Removed:
         protocol    -> "ITCH"
         msgType     -> "C_RSELL"
         msgData     -> [seller-id, time-order-entered]

   


   USER Messages:
      Round Start Message:
         protocol    -> "USER"
         msgType     -> "START"
         msgData     -> [start-time, initial-fundemental-price]

      User Enter Market:
         protocol    -> "USER"
         msgType     -> "UENTM"
         msgData     -> -1

      User Exit Market:
         protocol    -> "USER"
         msgType     -> "UEXTM"
         msgData     -> -1